/**
* Generated by Claude AI on 2025-08-12 and adapted for use
**/

package twinspire.layout;

import twinspire.scenes.SceneObject;
import twinspire.scenes.Scene;
import twinspire.render.GraphicsContext;
import twinspire.render.UpdateContext;
import twinspire.DimIndex;
import twinspire.Id;
import twinspire.geom.Dim;

/**
 * Extended Scene class with layout support
 */
class LayoutScene extends Scene {
    private var layoutObjects:Map<String, LayoutSceneObject>;
    private var mainLayout:Layout;
    
    public function new(name:String) {
        super(name);
        layoutObjects = [];
    }
    
    /**
     * Build UI using layouts
     */
    public function buildUI(ctx:GraphicsContext):LayoutResult {
        mainLayout = createMainLayout();
        
        // Create scene object from layout
        var layoutObj = LayoutSceneFactory.createSceneObject(mainLayout, ctx);
        layoutObjects["main"] = layoutObj;
        addObject(layoutObj);
        
        return layoutObj.result;
    }
    
    /**
     * Override this to create your layout
     */
    private function createMainLayout():Layout {
        return new Layout();
    }
    
    /**
     * Get a layout object by name
     */
    public function getLayoutObject(name:String):LayoutSceneObject {
        return layoutObjects[name];
    }
    
    /**
     * Get a dimension reference from any layout object
     */
    public function getRef(layoutName:String, refName:String):DimIndex {
        var obj = layoutObjects[layoutName];
        return obj != null ? obj.getRef(refName) : null;
    }
    
    /**
     * Convenience method to get main layout references
     */
    public function getMainRef(refName:String):DimIndex {
        return getRef("main", refName);
    }
}